---
layout:     post
title:      "Adapter Pattern 适配器模式"
subtitle:   "想使用的类的接口不符合你的需求，那就尝试写个适配器吧！"
date:       2017-04-30 19:20:00
author:     "Wudashan"
header-img: "img/post-bg-adapter-pattern.jpg"
catalog: true
tags:
    - 设计模式
    - 结构型模式
    - 适配器模式
---


> 将一个类的接口，转换成客户期望的另一个接口。适配器让原本接口不兼容的类可以合作无间。

## 模式名和分类
适配器模式，属于结构型模式。

---


## 动机
在软件开发过程中，有时为了更聚焦核心业务功能，我们会依赖一些开源组件来实现一些通用的、基础的功能。一般情况下，直接调用开源组件包中的类的接口来访问它所提供的服务即可。但是，有时会发现它所提供的接口不是我们所期望的，具体表现在方法名不符合我们的需求，更改方法名则需要把整个软件系统调用该接口的方法名全部替换。为了将整个系统的修改降至最低，同时还可以灵活替换开源组件而不必修改方法名，我们就可以用到适配器模式了！

---

## 优缺点
#### 优点

 - 将目标类和被适配者类解耦。通过引入一个适配器类，将被适配者类作为一个成员变量来实现目标类的方法。
 - 增加了类的透明性和复用性。将具体的实现封装在适配器类，对于调用方来说是透明的，而且编写好的适配器类可到处使用，实现复用性。
 - 符合开闭原则。可以在不修改系统原有代码的情况下增加新的适配器类，从而实现新的适配。

#### 缺点

 - 需要编写适配器类并实现相应的方法，实现过程比较复杂。

---

## 类图
![]()

---

## 代码示例




---

## 总结


---
